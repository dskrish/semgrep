{
    "errors": [],
    "results": [
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 70,
                "line": 217
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./analytics/views.py",
            "start": {
                "col": 15,
                "line": 217
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 57,
                "line": 227
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./analytics/views.py",
            "start": {
                "col": 15,
                "line": 226
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 45,
                "line": 1791
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 19,
                "line": 1791
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 71,
                "line": 1810
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 19,
                "line": 1810
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 86,
                "line": 2085
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 15,
                "line": 2085
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 66,
                "line": 2088
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 15,
                "line": 2087
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 46,
                "line": 2092
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 19,
                "line": 2091
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 45,
                "line": 2267
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 19,
                "line": 2267
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 62,
                "line": 2302
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 19,
                "line": 2302
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 83,
                "line": 3733
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 19,
                "line": 3733
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 73,
                "line": 3771
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 19,
                "line": 3769
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 57,
                "line": 3778
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 15,
                "line": 3777
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 73,
                "line": 3790
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 19,
                "line": 3788
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 73,
                "line": 3794
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 19,
                "line": 3792
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 73,
                "line": 3806
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 19,
                "line": 3804
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 99,
                "line": 3815
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 15,
                "line": 3815
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 92,
                "line": 3818
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 15,
                "line": 3818
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 60,
                "line": 4154
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 15,
                "line": 4154
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 65,
                "line": 4156
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 15,
                "line": 4156
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 77,
                "line": 5560
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 15,
                "line": 5560
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 73,
                "line": 5581
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 15,
                "line": 5581
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 73,
                "line": 5592
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/actions.py",
            "start": {
                "col": 15,
                "line": 5592
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 65,
                "line": 38
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/addressee.py",
            "start": {
                "col": 19,
                "line": 38
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 71,
                "line": 48
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/addressee.py",
            "start": {
                "col": 19,
                "line": 48
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 40,
                "line": 237
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/push_notifications.py",
            "start": {
                "col": 15,
                "line": 236
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 51,
                "line": 244
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/push_notifications.py",
            "start": {
                "col": 15,
                "line": 243
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 36,
                "line": 85
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/remote_server.py",
            "start": {
                "col": 19,
                "line": 85
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 95,
                "line": 354
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/request.py",
            "start": {
                "col": 27,
                "line": 354
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 46,
                "line": 358
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/request.py",
            "start": {
                "col": 27,
                "line": 358
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 46,
                "line": 364
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/request.py",
            "start": {
                "col": 27,
                "line": 364
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 36,
                "line": 13
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/user_groups.py",
            "start": {
                "col": 19,
                "line": 13
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 60,
                "line": 55
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/lib/zcommand.py",
            "start": {
                "col": 11,
                "line": 55
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 63,
                "line": 122
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/tests/test_decorators.py",
            "start": {
                "col": 23,
                "line": 122
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 34,
                "line": 41
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/custom_profile_fields.py",
            "start": {
                "col": 15,
                "line": 41
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 34,
                "line": 45
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/custom_profile_fields.py",
            "start": {
                "col": 15,
                "line": 45
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 34,
                "line": 59
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/custom_profile_fields.py",
            "start": {
                "col": 15,
                "line": 59
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 42,
                "line": 565
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/messages.py",
            "start": {
                "col": 23,
                "line": 565
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 72,
                "line": 1184
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/messages.py",
            "start": {
                "col": 19,
                "line": 1184
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 53,
                "line": 244
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/streams.py",
            "start": {
                "col": 23,
                "line": 244
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 98,
                "line": 92
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/user_groups.py",
            "start": {
                "col": 19,
                "line": 92
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 90,
                "line": 107
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/user_groups.py",
            "start": {
                "col": 19,
                "line": 107
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 72,
                "line": 61
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zilencer/views.py",
            "start": {
                "col": 15,
                "line": 61
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 38,
                "line": 66
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zilencer/views.py",
            "start": {
                "col": 15,
                "line": 66
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.jsonableerror_uggettext",
            "end": {
                "col": 75,
                "line": 166
            },
            "extra": {
                "message": "Argument to JsonableError should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zilencer/views.py",
            "start": {
                "col": 19,
                "line": 166
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.ugettext_with_computed_string",
            "end": {
                "col": 22,
                "line": 22
            },
            "extra": {
                "message": "Called _() on a computed string string",
                "metavars": {
                    "$A": {
                        "abstract_content": "string",
                        "end": {
                            "col": 22,
                            "line": 22,
                            "offset": 564
                        },
                        "start": {
                            "col": 16,
                            "line": 22,
                            "offset": 558
                        },
                        "unique_id": {
                            "kind": "Param",
                            "sid": 9,
                            "type": "id",
                            "value": "string"
                        }
                    }
                }
            },
            "path": "./zerver/lib/i18n.py",
            "start": {
                "col": 14,
                "line": 22
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 79,
                "line": 106
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./corporate/views.py",
            "start": {
                "col": 16,
                "line": 106
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 87,
                "line": 111
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./corporate/views.py",
            "start": {
                "col": 16,
                "line": 111
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 79,
                "line": 221
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./corporate/views.py",
            "start": {
                "col": 16,
                "line": 221
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 47,
                "line": 2000
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/tests/test_subs.py",
            "start": {
                "col": 20,
                "line": 2000
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 61,
                "line": 84
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/compatibility.py",
            "start": {
                "col": 16,
                "line": 84
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 65,
                "line": 89
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/compatibility.py",
            "start": {
                "col": 20,
                "line": 89
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 75,
                "line": 120
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/custom_profile_fields.py",
            "start": {
                "col": 16,
                "line": 120
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 75,
                "line": 139
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/custom_profile_fields.py",
            "start": {
                "col": 16,
                "line": 139
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 59,
                "line": 57
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/development/integrations.py",
            "start": {
                "col": 16,
                "line": 56
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 42,
                "line": 65
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/development/integrations.py",
            "start": {
                "col": 16,
                "line": 65
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 93,
                "line": 99
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/development/integrations.py",
            "start": {
                "col": 16,
                "line": 99
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 59,
                "line": 118
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/development/integrations.py",
            "start": {
                "col": 16,
                "line": 117
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 42,
                "line": 125
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/development/integrations.py",
            "start": {
                "col": 16,
                "line": 125
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 39,
                "line": 21
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/email_mirror.py",
            "start": {
                "col": 16,
                "line": 21
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 62,
                "line": 17
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/hotspots.py",
            "start": {
                "col": 16,
                "line": 17
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 95,
                "line": 46
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/invite.py",
            "start": {
                "col": 20,
                "line": 45
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 96,
                "line": 126
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/invite.py",
            "start": {
                "col": 20,
                "line": 126
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 52,
                "line": 822
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/messages.py",
            "start": {
                "col": 16,
                "line": 821
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 74,
                "line": 1379
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/messages.py",
            "start": {
                "col": 20,
                "line": 1379
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 32,
                "line": 51
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/muting.py",
            "start": {
                "col": 16,
                "line": 51
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 64,
                "line": 40
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/presence.py",
            "start": {
                "col": 16,
                "line": 40
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 89,
                "line": 98
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/realm.py",
            "start": {
                "col": 16,
                "line": 98
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 74,
                "line": 103
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/realm.py",
            "start": {
                "col": 20,
                "line": 103
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 43,
                "line": 126
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/realm.py",
            "start": {
                "col": 20,
                "line": 125
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 70,
                "line": 28
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/realm_domains.py",
            "start": {
                "col": 16,
                "line": 28
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 82,
                "line": 31
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/realm_domains.py",
            "start": {
                "col": 16,
                "line": 30
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 90,
                "line": 43
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/realm_domains.py",
            "start": {
                "col": 16,
                "line": 43
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 90,
                "line": 54
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/realm_domains.py",
            "start": {
                "col": 16,
                "line": 54
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 41,
                "line": 36
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/realm_emoji.py",
            "start": {
                "col": 16,
                "line": 35
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 41,
                "line": 48
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/realm_export.py",
            "start": {
                "col": 16,
                "line": 47
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 66,
                "line": 30
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/realm_filters.py",
            "start": {
                "col": 16,
                "line": 30
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 40,
                "line": 24
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/realm_icon.py",
            "start": {
                "col": 16,
                "line": 23
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 40,
                "line": 29
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/realm_logo.py",
            "start": {
                "col": 16,
                "line": 28
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 32,
                "line": 22
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/storage.py",
            "start": {
                "col": 16,
                "line": 22
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 32,
                "line": 35
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/storage.py",
            "start": {
                "col": 16,
                "line": 35
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 32,
                "line": 48
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/storage.py",
            "start": {
                "col": 16,
                "line": 48
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 92,
                "line": 350
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/streams.py",
            "start": {
                "col": 16,
                "line": 350
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 44,
                "line": 538
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/streams.py",
            "start": {
                "col": 16,
                "line": 538
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 81,
                "line": 609
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/streams.py",
            "start": {
                "col": 20,
                "line": 609
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 79,
                "line": 613
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/streams.py",
            "start": {
                "col": 20,
                "line": 613
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 50,
                "line": 617
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/streams.py",
            "start": {
                "col": 20,
                "line": 617
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 42,
                "line": 104
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/upload.py",
            "start": {
                "col": 16,
                "line": 103
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 98,
                "line": 86
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/user_settings.py",
            "start": {
                "col": 20,
                "line": 85
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 36,
                "line": 119
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/user_settings.py",
            "start": {
                "col": 20,
                "line": 119
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 40,
                "line": 128
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/user_settings.py",
            "start": {
                "col": 20,
                "line": 128
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 56,
                "line": 227
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/user_settings.py",
            "start": {
                "col": 16,
                "line": 227
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 42,
                "line": 232
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/user_settings.py",
            "start": {
                "col": 16,
                "line": 231
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 56,
                "line": 244
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/user_settings.py",
            "start": {
                "col": 16,
                "line": 244
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 43,
                "line": 449
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/users.py",
            "start": {
                "col": 16,
                "line": 448
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 66,
                "line": 457
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/users.py",
            "start": {
                "col": 16,
                "line": 457
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 50,
                "line": 462
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/views/users.py",
            "start": {
                "col": 16,
                "line": 462
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 65,
                "line": 149
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/webhooks/freshdesk/view.py",
            "start": {
                "col": 20,
                "line": 149
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 32,
                "line": 162
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/webhooks/librato/view.py",
            "start": {
                "col": 16,
                "line": 162
            }
        },
        {
            "check_id": "Users.brendon.ret2co.sgrep.semgrep.tests.acceptance.zulip.json_error_uggettext",
            "end": {
                "col": 76,
                "line": 45
            },
            "extra": {
                "message": "Argument to json_error should be a literal string enclosed by _()",
                "metavars": {}
            },
            "path": "./zerver/webhooks/wordpress/view.py",
            "start": {
                "col": 16,
                "line": 45
            }
        }
    ]
}